# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
spring.datasource.platform = oracle
spring.datasource.driver=oracle.jdbc.OracleDriver

#####  AWS
#spring.datasource.url=jdbc:oracle:thin:@//maipograndedb.cc9pedo2nnou.us-east-1.rds.amazonaws.com/MAIPODB
#spring.datasource.username=maipo
#spring.datasource.password=maipo123


#####  BWS
spring.datasource.url=jdbc:oracle:thin:@//186.106.124.214:1521/xe
spring.datasource.username=C##MAIPO
spring.datasource.password=maipo123


# Localhost
#spring.datasource.driverClassName = oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@//localhost:32118/xe
#spring.datasource.username=C##VIRTUALFAIR
#spring.datasource.password=pepperoni1141

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1





# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=validate


# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.EJB3NamingStrategy


# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10cDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
logging.level.org.hibernate.SQL=debug
